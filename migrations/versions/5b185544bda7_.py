"""empty message

Revision ID: 5b185544bda7
Revises: 
Create Date: 2023-11-13 08:15:23.973873

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '5b185544bda7'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('authors',
    sa.Column('authorId', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('firstName', sa.String(length=50), nullable=False),
    sa.Column('middleName', sa.String(length=50), nullable=True),
    sa.Column('lastName', sa.String(length=50), nullable=True),
    sa.Column('gender', sa.String(length=10), nullable=True),
    sa.Column('emailAddress', sa.String(length=128), nullable=True),
    sa.Column('phoneNumber', sa.String(length=20), nullable=True),
    sa.Column('imageUrl', sa.String(length=255), nullable=True),
    sa.Column('nationality', sa.String(length=60), nullable=True),
    sa.Column('dateCreated', sa.DateTime(), nullable=True),
    sa.Column('lastUpdated', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('authorId')
    )
    op.create_table('books',
    sa.Column('bookId', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('summary', sa.Text(), nullable=True),
    sa.Column('publisher', sa.String(length=255), nullable=False),
    sa.Column('yearPublished', sa.Integer(), nullable=False),
    sa.Column('edition', sa.Integer(), server_default='1', nullable=False),
    sa.Column('imageUrl', sa.String(length=255), nullable=True),
    sa.Column('dateCreated', sa.DateTime(), nullable=True),
    sa.Column('lastUpdated', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('bookId')
    )
    op.create_table('categories',
    sa.Column('categoryId', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('categoryId')
    )
    op.create_table('roles',
    sa.Column('roleId', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title', sa.String(length=32), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('default', sa.Boolean(), nullable=True),
    sa.Column('permissions', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('roleId')
    )
    op.create_table('author_book_association',
    sa.Column('author_id', sa.Integer(), nullable=True),
    sa.Column('book_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['authors.authorId'], ),
    sa.ForeignKeyConstraint(['book_id'], ['books.bookId'], )
    )
    op.create_table('category_book_association',
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('book_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['book_id'], ['books.bookId'], ),
    sa.ForeignKeyConstraint(['category_id'], ['categories.categoryId'], )
    )
    op.create_table('raffles',
    sa.Column('raffleId', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('dateCreated', sa.DateTime(), nullable=True),
    sa.Column('lastUpdated', sa.DateTime(), nullable=True),
    sa.Column('participantLimit', sa.Integer(), nullable=False),
    sa.Column('startTime', sa.DateTime(), nullable=True),
    sa.Column('endTime', sa.DateTime(), nullable=True),
    sa.Column('bookId', sa.Integer(), nullable=True),
    sa.Column('isClosed', sa.Boolean(), nullable=True),
    sa.Column('isActive', sa.Boolean(), nullable=True),
    sa.Column('price', sa.Float(), server_default='1', nullable=False),
    sa.ForeignKeyConstraint(['bookId'], ['books.bookId'], ),
    sa.PrimaryKeyConstraint('raffleId')
    )
    op.create_table('users',
    sa.Column('userId', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('firstName', sa.String(length=50), nullable=False),
    sa.Column('middleName', sa.String(length=50), nullable=True),
    sa.Column('lastName', sa.String(length=50), nullable=True),
    sa.Column('gender', sa.String(length=10), nullable=True),
    sa.Column('imageUrl', sa.String(length=255), nullable=True),
    sa.Column('emailAddress', sa.String(length=128), nullable=False),
    sa.Column('phoneNumber', sa.String(length=20), nullable=False),
    sa.Column('nationality', sa.String(length=60), nullable=True),
    sa.Column('passwordHash', sa.String(length=255), nullable=False),
    sa.Column('isActive', sa.Boolean(), nullable=True),
    sa.Column('isSuspended', sa.Boolean(), nullable=True),
    sa.Column('isConfirmed', sa.Boolean(), nullable=True),
    sa.Column('token', sa.String(length=255), nullable=True),
    sa.Column('tokenExpiration', sa.DateTime(), nullable=True),
    sa.Column('accountBalance', sa.Float(), server_default='0', nullable=False),
    sa.Column('lastMessageReadTime', sa.DateTime(), nullable=True),
    sa.Column('lastSeen', sa.DateTime(), nullable=True),
    sa.Column('dateCreated', sa.DateTime(), nullable=True),
    sa.Column('lastUpdated', sa.DateTime(), nullable=True),
    sa.Column('roleId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['roleId'], ['roles.roleId'], ),
    sa.PrimaryKeyConstraint('userId')
    )
    op.create_table('notifications',
    sa.Column('notificationId', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('content', sa.String(length=255), nullable=False),
    sa.Column('userId', sa.Integer(), nullable=True),
    sa.Column('payloadJSON', sa.Text(), nullable=True),
    sa.Column('dateCreated', sa.DateTime(), nullable=True),
    sa.Column('lastUpdated', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['userId'], ['users.userId'], ),
    sa.PrimaryKeyConstraint('notificationId')
    )
    op.create_table('tasks',
    sa.Column('taskId', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('userId', sa.Integer(), nullable=True),
    sa.Column('isComplete', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['userId'], ['users.userId'], ),
    sa.PrimaryKeyConstraint('taskId')
    )
    op.create_table('tickets',
    sa.Column('ticketId', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('raffleId', sa.Integer(), nullable=True),
    sa.Column('userId', sa.Integer(), nullable=True),
    sa.Column('isWinningTicket', sa.Boolean(), nullable=True),
    sa.Column('dateCreated', sa.DateTime(), nullable=True),
    sa.Column('lastUpdated', sa.DateTime(), nullable=True),
    sa.Column('uniqueNumber', sa.String(), nullable=False),
    sa.Column('isCancelled', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['raffleId'], ['raffles.raffleId'], ),
    sa.ForeignKeyConstraint(['userId'], ['users.userId'], ),
    sa.PrimaryKeyConstraint('ticketId')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('tickets')
    op.drop_table('tasks')
    op.drop_table('notifications')
    op.drop_table('users')
    op.drop_table('raffles')
    op.drop_table('category_book_association')
    op.drop_table('author_book_association')
    op.drop_table('roles')
    op.drop_table('categories')
    op.drop_table('books')
    op.drop_table('authors')
    # ### end Alembic commands ###
